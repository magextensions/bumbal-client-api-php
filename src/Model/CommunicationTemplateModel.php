<?php
/**
 * CommunicationTemplateModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  BumbalClient
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * OpenAPI spec version: 2.0
 * Contact: gerb@bumbal.eu
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BumbalClient\Model;

use \ArrayAccess;

/**
 * CommunicationTemplateModel Class Doc Comment
 *
 * @category    Class
 * @package     BumbalClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CommunicationTemplateModel implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'CommunicationTemplateModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'name' => 'string',
        'subject' => 'string',
        'description' => 'string',
        'content_html' => 'string',
        'content_text' => 'string',
        'include_attachments' => 'bool',
        'links' => '\BumbalClient\Model\LinkModel[]',
        'meta_data' => '\BumbalClient\Model\MetaDataModel[]',
        'communication_template_created_at' => '\DateTime',
        'communication_template_updated_at' => '\DateTime',
        'communication_template_created_by' => 'int',
        'communication_template_updated_by' => 'int',
        'communication_template_created_by_user' => '\BumbalClient\Model\UsersModel',
        'communication_template_updated_by_user' => '\BumbalClient\Model\UsersModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
        'name' => null,
        'subject' => null,
        'description' => null,
        'content_html' => null,
        'content_text' => null,
        'include_attachments' => null,
        'links' => null,
        'meta_data' => null,
        'communication_template_created_at' => 'date-time',
        'communication_template_updated_at' => 'date-time',
        'communication_template_created_by' => null,
        'communication_template_updated_by' => null,
        'communication_template_created_by_user' => null,
        'communication_template_updated_by_user' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'subject' => 'subject',
        'description' => 'description',
        'content_html' => 'content_html',
        'content_text' => 'content_text',
        'include_attachments' => 'include_attachments',
        'links' => 'links',
        'meta_data' => 'meta_data',
        'communication_template_created_at' => 'communication_template_created_at',
        'communication_template_updated_at' => 'communication_template_updated_at',
        'communication_template_created_by' => 'communication_template_created_by',
        'communication_template_updated_by' => 'communication_template_updated_by',
        'communication_template_created_by_user' => 'communication_template_created_by_user',
        'communication_template_updated_by_user' => 'communication_template_updated_by_user'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'subject' => 'setSubject',
        'description' => 'setDescription',
        'content_html' => 'setContentHtml',
        'content_text' => 'setContentText',
        'include_attachments' => 'setIncludeAttachments',
        'links' => 'setLinks',
        'meta_data' => 'setMetaData',
        'communication_template_created_at' => 'setCommunicationTemplateCreatedAt',
        'communication_template_updated_at' => 'setCommunicationTemplateUpdatedAt',
        'communication_template_created_by' => 'setCommunicationTemplateCreatedBy',
        'communication_template_updated_by' => 'setCommunicationTemplateUpdatedBy',
        'communication_template_created_by_user' => 'setCommunicationTemplateCreatedByUser',
        'communication_template_updated_by_user' => 'setCommunicationTemplateUpdatedByUser'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'subject' => 'getSubject',
        'description' => 'getDescription',
        'content_html' => 'getContentHtml',
        'content_text' => 'getContentText',
        'include_attachments' => 'getIncludeAttachments',
        'links' => 'getLinks',
        'meta_data' => 'getMetaData',
        'communication_template_created_at' => 'getCommunicationTemplateCreatedAt',
        'communication_template_updated_at' => 'getCommunicationTemplateUpdatedAt',
        'communication_template_created_by' => 'getCommunicationTemplateCreatedBy',
        'communication_template_updated_by' => 'getCommunicationTemplateUpdatedBy',
        'communication_template_created_by_user' => 'getCommunicationTemplateCreatedByUser',
        'communication_template_updated_by_user' => 'getCommunicationTemplateUpdatedByUser'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['subject'] = isset($data['subject']) ? $data['subject'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['content_html'] = isset($data['content_html']) ? $data['content_html'] : null;
        $this->container['content_text'] = isset($data['content_text']) ? $data['content_text'] : null;
        $this->container['include_attachments'] = isset($data['include_attachments']) ? $data['include_attachments'] : null;
        $this->container['links'] = isset($data['links']) ? $data['links'] : null;
        $this->container['meta_data'] = isset($data['meta_data']) ? $data['meta_data'] : null;
        $this->container['communication_template_created_at'] = isset($data['communication_template_created_at']) ? $data['communication_template_created_at'] : null;
        $this->container['communication_template_updated_at'] = isset($data['communication_template_updated_at']) ? $data['communication_template_updated_at'] : null;
        $this->container['communication_template_created_by'] = isset($data['communication_template_created_by']) ? $data['communication_template_created_by'] : null;
        $this->container['communication_template_updated_by'] = isset($data['communication_template_updated_by']) ? $data['communication_template_updated_by'] : null;
        $this->container['communication_template_created_by_user'] = isset($data['communication_template_created_by_user']) ? $data['communication_template_created_by_user'] : null;
        $this->container['communication_template_updated_by_user'] = isset($data['communication_template_updated_by_user']) ? $data['communication_template_updated_by_user'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id Unique ID
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name name of communication template
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets subject
     * @return string
     */
    public function getSubject()
    {
        return $this->container['subject'];
    }

    /**
     * Sets subject
     * @param string $subject subject of communication template (about 190 chars max, depending on type of chars)
     * @return $this
     */
    public function setSubject($subject)
    {
        $this->container['subject'] = $subject;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description description of communication template (about 190 chars max, depending on type of chars)
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets content_html
     * @return string
     */
    public function getContentHtml()
    {
        return $this->container['content_html'];
    }

    /**
     * Sets content_html
     * @param string $content_html html content of communication template for e-mails (Longtext)
     * @return $this
     */
    public function setContentHtml($content_html)
    {
        $this->container['content_html'] = $content_html;

        return $this;
    }

    /**
     * Gets content_text
     * @return string
     */
    public function getContentText()
    {
        return $this->container['content_text'];
    }

    /**
     * Sets content_text
     * @param string $content_text text content of communication template for mobile text messaging (Longtext)
     * @return $this
     */
    public function setContentText($content_text)
    {
        $this->container['content_text'] = $content_text;

        return $this;
    }

    /**
     * Gets include_attachments
     * @return bool
     */
    public function getIncludeAttachments()
    {
        return $this->container['include_attachments'];
    }

    /**
     * Sets include_attachments
     * @param bool $include_attachments Whether or not an email should be accompanied with an attachment
     * @return $this
     */
    public function setIncludeAttachments($include_attachments)
    {
        $this->container['include_attachments'] = $include_attachments;

        return $this;
    }

    /**
     * Gets links
     * @return \BumbalClient\Model\LinkModel[]
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     * @param \BumbalClient\Model\LinkModel[] $links 
     * @return $this
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets meta_data
     * @return \BumbalClient\Model\MetaDataModel[]
     */
    public function getMetaData()
    {
        return $this->container['meta_data'];
    }

    /**
     * Sets meta_data
     * @param \BumbalClient\Model\MetaDataModel[] $meta_data 
     * @return $this
     */
    public function setMetaData($meta_data)
    {
        $this->container['meta_data'] = $meta_data;

        return $this;
    }

    /**
     * Gets communication_template_created_at
     * @return \DateTime
     */
    public function getCommunicationTemplateCreatedAt()
    {
        return $this->container['communication_template_created_at'];
    }

    /**
     * Sets communication_template_created_at
     * @param \DateTime $communication_template_created_at created_at date time
     * @return $this
     */
    public function setCommunicationTemplateCreatedAt($communication_template_created_at)
    {
        $this->container['communication_template_created_at'] = $communication_template_created_at;

        return $this;
    }

    /**
     * Gets communication_template_updated_at
     * @return \DateTime
     */
    public function getCommunicationTemplateUpdatedAt()
    {
        return $this->container['communication_template_updated_at'];
    }

    /**
     * Sets communication_template_updated_at
     * @param \DateTime $communication_template_updated_at updated_at date time
     * @return $this
     */
    public function setCommunicationTemplateUpdatedAt($communication_template_updated_at)
    {
        $this->container['communication_template_updated_at'] = $communication_template_updated_at;

        return $this;
    }

    /**
     * Gets communication_template_created_by
     * @return int
     */
    public function getCommunicationTemplateCreatedBy()
    {
        return $this->container['communication_template_created_by'];
    }

    /**
     * Sets communication_template_created_by
     * @param int $communication_template_created_by created_by user id
     * @return $this
     */
    public function setCommunicationTemplateCreatedBy($communication_template_created_by)
    {
        $this->container['communication_template_created_by'] = $communication_template_created_by;

        return $this;
    }

    /**
     * Gets communication_template_updated_by
     * @return int
     */
    public function getCommunicationTemplateUpdatedBy()
    {
        return $this->container['communication_template_updated_by'];
    }

    /**
     * Sets communication_template_updated_by
     * @param int $communication_template_updated_by updated_by user id
     * @return $this
     */
    public function setCommunicationTemplateUpdatedBy($communication_template_updated_by)
    {
        $this->container['communication_template_updated_by'] = $communication_template_updated_by;

        return $this;
    }

    /**
     * Gets communication_template_created_by_user
     * @return \BumbalClient\Model\UsersModel
     */
    public function getCommunicationTemplateCreatedByUser()
    {
        return $this->container['communication_template_created_by_user'];
    }

    /**
     * Sets communication_template_created_by_user
     * @param \BumbalClient\Model\UsersModel $communication_template_created_by_user 
     * @return $this
     */
    public function setCommunicationTemplateCreatedByUser($communication_template_created_by_user)
    {
        $this->container['communication_template_created_by_user'] = $communication_template_created_by_user;

        return $this;
    }

    /**
     * Gets communication_template_updated_by_user
     * @return \BumbalClient\Model\UsersModel
     */
    public function getCommunicationTemplateUpdatedByUser()
    {
        return $this->container['communication_template_updated_by_user'];
    }

    /**
     * Sets communication_template_updated_by_user
     * @param \BumbalClient\Model\UsersModel $communication_template_updated_by_user 
     * @return $this
     */
    public function setCommunicationTemplateUpdatedByUser($communication_template_updated_by_user)
    {
        $this->container['communication_template_updated_by_user'] = $communication_template_updated_by_user;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\BumbalClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\BumbalClient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


