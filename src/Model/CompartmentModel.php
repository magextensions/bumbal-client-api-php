<?php
/**
 * CompartmentModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  BumbalClient
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * OpenAPI spec version: 2.0
 * Contact: gerb@bumbal.eu
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BumbalClient\Model;

use \ArrayAccess;

/**
 * CompartmentModel Class Doc Comment
 *
 * @category    Class
 * @package     BumbalClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CompartmentModel implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'CompartmentModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'nr' => 'string',
        'trailer_id' => 'int',
        'filled_capacities' => '\BumbalClient\Model\FilledCapacityModel[]',
        'trailer_link' => '\BumbalClient\Model\LinkModel[]',
        'links' => '\BumbalClient\Model\LinkModel[]',
        'meta_data' => '\BumbalClient\Model\MetaDataModel[]',
        'compartment_created_by' => '\BumbalClient\Model\UsersModel',
        'compartment_updated_by' => '\BumbalClient\Model\UsersModel',
        'compartment_created_at' => '\DateTime',
        'compartment_updated_at' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
        'nr' => null,
        'trailer_id' => null,
        'filled_capacities' => null,
        'trailer_link' => null,
        'links' => null,
        'meta_data' => null,
        'compartment_created_by' => null,
        'compartment_updated_by' => null,
        'compartment_created_at' => 'date-time',
        'compartment_updated_at' => 'date-time'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'nr' => 'nr',
        'trailer_id' => 'trailer_id',
        'filled_capacities' => 'filled_capacities',
        'trailer_link' => 'trailer_link',
        'links' => 'links',
        'meta_data' => 'meta_data',
        'compartment_created_by' => 'compartment_created_by',
        'compartment_updated_by' => 'compartment_updated_by',
        'compartment_created_at' => 'compartment_created_at',
        'compartment_updated_at' => 'compartment_updated_at'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'nr' => 'setNr',
        'trailer_id' => 'setTrailerId',
        'filled_capacities' => 'setFilledCapacities',
        'trailer_link' => 'setTrailerLink',
        'links' => 'setLinks',
        'meta_data' => 'setMetaData',
        'compartment_created_by' => 'setCompartmentCreatedBy',
        'compartment_updated_by' => 'setCompartmentUpdatedBy',
        'compartment_created_at' => 'setCompartmentCreatedAt',
        'compartment_updated_at' => 'setCompartmentUpdatedAt'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'nr' => 'getNr',
        'trailer_id' => 'getTrailerId',
        'filled_capacities' => 'getFilledCapacities',
        'trailer_link' => 'getTrailerLink',
        'links' => 'getLinks',
        'meta_data' => 'getMetaData',
        'compartment_created_by' => 'getCompartmentCreatedBy',
        'compartment_updated_by' => 'getCompartmentUpdatedBy',
        'compartment_created_at' => 'getCompartmentCreatedAt',
        'compartment_updated_at' => 'getCompartmentUpdatedAt'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['nr'] = isset($data['nr']) ? $data['nr'] : null;
        $this->container['trailer_id'] = isset($data['trailer_id']) ? $data['trailer_id'] : null;
        $this->container['filled_capacities'] = isset($data['filled_capacities']) ? $data['filled_capacities'] : null;
        $this->container['trailer_link'] = isset($data['trailer_link']) ? $data['trailer_link'] : null;
        $this->container['links'] = isset($data['links']) ? $data['links'] : null;
        $this->container['meta_data'] = isset($data['meta_data']) ? $data['meta_data'] : null;
        $this->container['compartment_created_by'] = isset($data['compartment_created_by']) ? $data['compartment_created_by'] : null;
        $this->container['compartment_updated_by'] = isset($data['compartment_updated_by']) ? $data['compartment_updated_by'] : null;
        $this->container['compartment_created_at'] = isset($data['compartment_created_at']) ? $data['compartment_created_at'] : null;
        $this->container['compartment_updated_at'] = isset($data['compartment_updated_at']) ? $data['compartment_updated_at'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id Unique Identifier
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets nr
     * @return string
     */
    public function getNr()
    {
        return $this->container['nr'];
    }

    /**
     * Sets nr
     * @param string $nr Nr of compartment
     * @return $this
     */
    public function setNr($nr)
    {
        $this->container['nr'] = $nr;

        return $this;
    }

    /**
     * Gets trailer_id
     * @return int
     */
    public function getTrailerId()
    {
        return $this->container['trailer_id'];
    }

    /**
     * Sets trailer_id
     * @param int $trailer_id 
     * @return $this
     */
    public function setTrailerId($trailer_id)
    {
        $this->container['trailer_id'] = $trailer_id;

        return $this;
    }

    /**
     * Gets filled_capacities
     * @return \BumbalClient\Model\FilledCapacityModel[]
     */
    public function getFilledCapacities()
    {
        return $this->container['filled_capacities'];
    }

    /**
     * Sets filled_capacities
     * @param \BumbalClient\Model\FilledCapacityModel[] $filled_capacities 
     * @return $this
     */
    public function setFilledCapacities($filled_capacities)
    {
        $this->container['filled_capacities'] = $filled_capacities;

        return $this;
    }

    /**
     * Gets trailer_link
     * @return \BumbalClient\Model\LinkModel[]
     */
    public function getTrailerLink()
    {
        return $this->container['trailer_link'];
    }

    /**
     * Sets trailer_link
     * @param \BumbalClient\Model\LinkModel[] $trailer_link 
     * @return $this
     */
    public function setTrailerLink($trailer_link)
    {
        $this->container['trailer_link'] = $trailer_link;

        return $this;
    }

    /**
     * Gets links
     * @return \BumbalClient\Model\LinkModel[]
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     * @param \BumbalClient\Model\LinkModel[] $links 
     * @return $this
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets meta_data
     * @return \BumbalClient\Model\MetaDataModel[]
     */
    public function getMetaData()
    {
        return $this->container['meta_data'];
    }

    /**
     * Sets meta_data
     * @param \BumbalClient\Model\MetaDataModel[] $meta_data 
     * @return $this
     */
    public function setMetaData($meta_data)
    {
        $this->container['meta_data'] = $meta_data;

        return $this;
    }

    /**
     * Gets compartment_created_by
     * @return \BumbalClient\Model\UsersModel
     */
    public function getCompartmentCreatedBy()
    {
        return $this->container['compartment_created_by'];
    }

    /**
     * Sets compartment_created_by
     * @param \BumbalClient\Model\UsersModel $compartment_created_by 
     * @return $this
     */
    public function setCompartmentCreatedBy($compartment_created_by)
    {
        $this->container['compartment_created_by'] = $compartment_created_by;

        return $this;
    }

    /**
     * Gets compartment_updated_by
     * @return \BumbalClient\Model\UsersModel
     */
    public function getCompartmentUpdatedBy()
    {
        return $this->container['compartment_updated_by'];
    }

    /**
     * Sets compartment_updated_by
     * @param \BumbalClient\Model\UsersModel $compartment_updated_by 
     * @return $this
     */
    public function setCompartmentUpdatedBy($compartment_updated_by)
    {
        $this->container['compartment_updated_by'] = $compartment_updated_by;

        return $this;
    }

    /**
     * Gets compartment_created_at
     * @return \DateTime
     */
    public function getCompartmentCreatedAt()
    {
        return $this->container['compartment_created_at'];
    }

    /**
     * Sets compartment_created_at
     * @param \DateTime $compartment_created_at created_at date time
     * @return $this
     */
    public function setCompartmentCreatedAt($compartment_created_at)
    {
        $this->container['compartment_created_at'] = $compartment_created_at;

        return $this;
    }

    /**
     * Gets compartment_updated_at
     * @return \DateTime
     */
    public function getCompartmentUpdatedAt()
    {
        return $this->container['compartment_updated_at'];
    }

    /**
     * Sets compartment_updated_at
     * @param \DateTime $compartment_updated_at updated_at date time
     * @return $this
     */
    public function setCompartmentUpdatedAt($compartment_updated_at)
    {
        $this->container['compartment_updated_at'] = $compartment_updated_at;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\BumbalClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\BumbalClient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


